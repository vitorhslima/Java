package br.com.caelum.leilao.teste;

import static org.junit.Assert.assertEquals;

import java.util.List;

import org.junit.Before;
import org.junit.Test;

import br.com.caelum.leilao.dominio.Lance;
import br.com.caelum.leilao.dominio.Leilao;
import br.com.caelum.leilao.dominio.Usuario;
import br.com.caelum.leilao.servico.Avaliador;
import junit.framework.Assert;

public class TesteAvaliador {
	
	private Avaliador leiloeiro;

	@Before
	public void criaAvaliador() {
		this.leiloeiro = new Avaliador();
		System.out.println("cria avaliador");
	}
	
	@Test
	public void deveEntenderLanceEmOrdemCrecente() {
		
		Usuario vitor = new Usuario("Vitor");
		Usuario jose = new Usuario("Jose");
		Usuario maria = new Usuario("Maria");
		
		Leilao leilao = new Leilao("PC gamer Roda tudo");
		
		leilao.propoe(new Lance(jose, 300.0));
		leilao.propoe(new Lance(vitor, 800.0));
		leilao.propoe(new Lance(maria, 400.0));
		
		leiloeiro.avalia(leilao);		
		
		
		double maiorEsperado = 800;
		double menorEsperado = 300;
		
		assertEquals(maiorEsperado, leiloeiro.getMaiorLance(), 0.00001);
		assertEquals(menorEsperado, leiloeiro.getMenorLance(), 0.00001);
	}
	
	@Test 	
	public void deveEntenderleilaoComApenasumlance() {
		Usuario paula = new Usuario("Paula");
		Leilao leilao = new Leilao("ps5 novinho");
		
		leilao.propoe(new Lance(paula, 1000.0));
		
		leiloeiro.avalia(leilao);
		
		assertEquals(1000.0, leiloeiro.getMaiorLance(), 0.00001);
		assertEquals(1000.0, leiloeiro.getMenorLance(), 0.00001);
	}
	
	@Test
	public void deveEncootrarOstResMaioresLances() {
		Usuario joao = new Usuario("joão");
		Usuario maria = new Usuario("Maria");
		
		Leilao leilao = new Leilao("Mouse gamer");
		
		leilao.propoe(new Lance(joao, 100.0));
		leilao.propoe(new Lance(maria, 200.0));
		leilao.propoe(new Lance(joao, 300.0));
		leilao.propoe(new Lance(maria, 400.0));
		
		leiloeiro.avalia(leilao);
		
		List<Lance> maiores = leiloeiro.getTresMaiores();
		assertEquals(3, maiores.size());
//		assertEquals(400.0, maiores.get(0).getValor(), 0.00001);
//      assertEquals(300.0, maiores.get(1).getValor(), 0.00001);
//      assertEquals(200.0, maiores.get(2).getValor(), 0.00001);
	}
	

}
